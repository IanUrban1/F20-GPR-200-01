#version 300 es
//Assistance from Mr.Buckstein-> class notes   
//Assistance from https://people.inf.elte.hu/plisaai/pdf/David%20Wolff%20-%20OpenGL%204.0%20Shading%20Language%20Cookbook%20(2).pdf


#ifdef GL_ES
precision highp float;
#endif
 
uniform vec2 uResolution; 
uniform sampler2D uTex;

layout (location = 0) out vec4 rtFragColor;

in vec2 vTexCoord;  
in vec4 vNormal;

 
 //bright pass effect
float luma(vec3 color)
{
    //creating local var to store 
    //the vec3 color red value
    float lumaRed = 0.2126 * color.r;
    
    //creating local var to store 
    //the vec3 color green value
    float lumaGreen = 0.7152 * color.g;
    
    //creating local var to store 
    //the vec3 color blue value
    float lumaBlue = 0.0722 * color.b;
    
   	//add all of those values and then returning them
 	return lumaRed + lumaGreen + lumaBlue; 
}


//brightpass
vec4 pass1()
{
    //creating lumThresh var
    float lumThresh = 0.5;
    
    //getting the texture and the uv
    vec4 val = texture(uTex, vTexCoord);
    
    //using clamp and lumThresh to find and illuminate all
    //brighter sections of the cubemap
    return val * clamp(luma(val.rgb) - lumThresh, 0.0, 1.0) * (1.0 / (1.0 - lumThresh));
}
 

void main()
{    
	//making a temp vec4 to set the pass to
	vec4 getBrightPass = pass1();  
	
	//set rtFragColor to the getBrightPass to get the pass data
	rtFragColor = getBrightPass;  
}
